{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Barracuda CloudGen Firewall - Cold Standby Cluster",
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "Launch Configuration Settings"
          },
          "Parameters": [
            "InstanceType",
            "IAMProfile",
            "ReleaseVersion",
            "LicenceMode"
          ]
        },
        {
          "Label": {
            "default": "Network Settings"
          },
          "Parameters": [
            "VpcAddress",
            "PublicSubnetAAddress",
            "PublicSubnetBAddress"
          ]
        }
      ],
      "ParameterLabels": {
        "InstanceType": {
          "default": "Instance Type"
        },
        "IAMProfile": {
          "default": "IAM Profile"
        },
        "ReleaseVersion": {
          "default": "Release Version"
        },
        "VpcAddress": {
          "default": "VPC Address"
        },
        "PublicSubnetAAddress": {
          "default": "Subnet in Zone A"
        },
        "PublicSubnetBAddress": {
          "default": "Subnet in Zone B"
        },
        "ZoneA": {
          "default": "Zone (A) to deploy to"
        },
        "ZoneB": {
          "default": "Zone (B) to deploy to"
        }
      }
    }
  },
  "Parameters": {
    "InstanceType": {
      "Description": "Select the EC2 instance type.",
      "Type": "String",
      "Default": "c5.large",
      "AllowedValues": [
        "t2.small",
        "t3.small",
        "t3.medium",
        "t3.large",
        "m5.large",
        "m5.xlarge",
        "m5.2xlarge",
        "c5.large",
        "c5.xlarge",
        "c5.2xlarge"
      ]
    },
    "IAMProfile": {
      "Description": "Select the IAM Role for the NextGen Firewall.",
      "Type": "String",
      "Default": "NextGenFirewallRole"
    },
    "VpcAddress": {
      "Description": "IP address space for new VPC",
      "Type": "String",
      "Default": "192.168.0.0/16",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "Use valid CIDR notation"
    },
    "PublicSubnetAAddress": {
      "Description": "Public helper subnet in A zone. Must be within VPC address space.",
      "Type": "String",
      "Default": "192.168.0.0/25",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    },
    "PublicSubnetBAddress": {
      "Description": "Public helper subnet in B zone. Must be within VPC address space.",
      "Type": "String",
      "Default": "192.168.0.128/25",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    },
    "ZoneA": {
      "Description": "",
      "Type": "AWS::EC2::AvailabilityZone::Name"
    },
    "ZoneB": {
      "Description": "",
      "Type": "AWS::EC2::AvailabilityZone::Name"
    },
    "LicenceMode": {
      "Description": "Select the license type.",
      "Type": "String",
      "Default": "Hourly",
      "AllowedValues": [
        "Hourly",
        "BYOL"
      ]
    },
    "ReleaseVersion": {
      "Description": "Which release do you want to deploy?",
      "Type": "String",
      "Default": "8.2.1",
      "AllowedValues": [
        "8.0.5",
        "8.2.1"
      ]
    }
  },
    "Mappings": {
        "amiMapMap": {
            "8.0.5": {
                "mapName": "amiMapv805"
            },
            "8.2.1": {
                "mapName": "amiMapv821"
            }
        },
        "amiMapv805": {
            "us-east-1" : {
                "Hourly" : "ami-07570d14ecc6d753b",
                "BYOL" : "ami-0569830c65eafd424",
            },
            "us-east-2" : {
                "Hourly" : "ami-0d77d90f71f12fba8",
                "BYOL" : "ami-00ba624f65f4e9978",
            },
            "us-west-1" : {
                "Hourly" : "ami-035cbf9456923d13e",
                "BYOL" : "ami-03c116b5ea4390001",
            },
            "us-west-2" : {
                "Hourly" : "ami-0e5dd9b420e41328b",
                "BYOL" : "ami-06745e2b44b269cf0",
            },
            "ap-northeast-3" : {
                "Hourly" : "ami-0102c282132faf2b1",
                "BYOL" : "	ami-08aa0a3dd2653c27c",
            },
            "ap-southeast-1" : {
                "Hourly" : "ami-0efef200246fab974",
                "BYOL" : "ami-0e1ad7dfea5ccb743",
            },
           "ap-southeast-2" : {
                "Hourly" : "ami-02c97a3294f690c00",
                "BYOL" : "ami-081f3635d890c77ba",
            },
            "ap-northeast-1" : {
                "Hourly" : "ami-08cec4fed243531c1",
                "BYOL" : "ami-0cfd25214276952eb",
            },
           "ca-central-1" : {
                "Hourly" : "ami-02542102565f2e9e9",
                "BYOL" : "ami-0cfa82a87f4d509a5",
            },
           "eu-central-1" : {
                "Hourly" : "ami-0bb8e575294ff0eb9",
                "BYOL" : "ami-0f8c7793cf68789d8",
            },
            "eu-west-1" : {
                "Hourly" : "ami-0fbb2bb1f9bb94ddd",
                "BYOL" : "ami-08f45e2aac7c603ce",
            },
            "eu-west-2" : {
                "Hourly" : "ami-008b756cb6590e805",
                "BYOL" : "ami-0be81758b47cef977",
            },
            "sa-east-1" : {
                "Hourly" : "ami-04db38c5d9e59bbec",
                "BYOL" : "ami-03ad6e4f2a0634f31",
            },
        },
        "amiMapv821": {
          "us-east-1" : {
                "Hourly" : "ami-06626e94a994ebb55",
                "BYOL" : "ami-06ccb7d96ef307528",
            },
            "us-east-2" : {
                "Hourly" : "ami-078ed482a8f9491d4",
                "BYOL" : "ami-049f1c062bb15c3c3",
            },
            "us-west-1" : {
                "Hourly" : "ami-07a4e430871439bd3",
                "BYOL" : "ami-0c388f75a4ef7e81c",
            },
            "us-west-2" : {
                "Hourly" : "ami-0c5a6d0536959f26a",
                "BYOL" : "ami-0cc071cf047b42c97",
            },
           "ap-southeast-1" : {
                "Hourly" : "ami-09f3afbc3b694c882",
                "BYOL" : "ami-04355821a06841826",
            },
           "ap-southeast-2" : {
                "Hourly" : "ami-055902f1e1c7d3fe7",
                "BYOL" : "ami-090841fa54dd58d0a",
            },
            "ap-northeast-1" : {
                "Hourly" : "ami-000d04af5c900a649",
                "BYOL" : "ami-051e6cdac669c44c1",
            },
           "ca-central-1" : {
                "Hourly" : "ami-0df68afa8277df8b3",
                "BYOL" : "ami-0dd0482612d5724ba",
            },
           "eu-central-1" : {
                "Hourly" : "ami-08183a86c2102371c",
                "BYOL" : "ami-03a7e2b5cd9e295af",
            },
            "eu-west-1" : {
                "Hourly" : "ami-080f56021f42687be",
                "BYOL" : "ami-0e0dac9a920663dd8",
            },
            "eu-west-2" : {
                "Hourly" : "ami-0ea695b18dcc775e2",
                "BYOL" : "ami-06f4a60ebad16e1fe",
            },
            "sa-east-1" : {
                "Hourly" : "ami-0430115dfd1f17d53",
                "BYOL" : "ami-0ef9dd4b0a6be4e7f",
            },
        }
    },
  "Resources": {
    "PublicSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Security group for the ASG",
        "VpcId": {
          "Ref": "VPC"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "-1",
            "FromPort": -1,
            "ToPort": -1,
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": {
          "Ref": "VpcAddress"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "VPC"
                ]
              ]
            }
          }
        ]
      }
    },
    "PublicSubnetA": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {
          "Ref": "ZoneA"
        },
        "CidrBlock": {
          "Ref": "PublicSubnetAAddress"
        },
        "VpcId": {
          "Ref": "VPC"
        }
      }
    },
    "PublicSubnetB": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {
          "Ref": "ZoneB"
        },
        "CidrBlock": {
          "Ref": "PublicSubnetBAddress"
        },
        "VpcId": {
          "Ref": "VPC"
        }
      }
    },
    "IGW": {
      "Type": "AWS::EC2::InternetGateway"
    },
    "IGWAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "InternetGatewayId": {
          "Ref": "IGW"
        }
      }
    },
    "ElasticIP": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc"
      },
      "DependsOn": [
        "IGWAttachment"
      ]
    },
    "S3": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "Private",
        "VersioningConfiguration": {
          "Status": "Enabled"
        }
      }
    },
    "PublicSubnetRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "route-via-IGW"
          }
        ]
      }
    },
    "PrivateSubnetRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "route-via-NGF"
                ]
              ]
            }
          }
        ]
      }
    },
    "PublicDefaultRoute": {
      "Type": "AWS::EC2::Route",
      "DependsOn": "IGWAttachment",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "IGW"
        },
        "RouteTableId": {
          "Ref": "PublicSubnetRouteTable"
        }
      }
    },
    "PrivateDefaultRoute": {
      "Type": "AWS::EC2::Route",
      "DependsOn": "IGWAttachment",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "IGW"
        },
        "RouteTableId": {
          "Ref": "PrivateSubnetRouteTable"
        }
      }
    },
    "PublicSubnetRouteTableAssocA": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicSubnetRouteTable"
        },
        "SubnetId": {
          "Ref": "PublicSubnetA"
        }
      }
    },
    "PublicSubnetRouteTableAssocB": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicSubnetRouteTable"
        },
        "SubnetId": {
          "Ref": "PublicSubnetB"
        }
      }
    },
    "LaunchConfiguration": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": {
          "Fn::FindInMap": [
            {
              "Fn::FindInMap": [
                "amiMapMap",
                {
                  "Ref": "ReleaseVersion"
                },
                "mapName"
              ]
            },
            {
              "Ref": "AWS::Region"
            },
            {
              "Ref": "LicenceMode"
            }
          ]
        },
        "SecurityGroups": [
          {
            "Ref": "PublicSecurityGroup"
          }
        ],
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "AssociatePublicIpAddress": true,
        "IamInstanceProfile": {
          "Ref": "IAMProfile"
        },
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "\n",
              [
                "#!/bin/bash",
                {
                  "Fn::Join": [
                    " ",
                    [
                      "/opt/phion/bin/aws-asg-provision",
                      "--bucket",
                      {
                        "Ref": "S3"
                      },
                      "--topic",
                      {
                        "Ref": "AWS::StackName"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    " ",
                    [
                      "/opt/aws/bin/aws ec2 associate-address",
                      "--instance-id $(/usr/bin/curl -s http://169.254.169.254/latest/meta-data/instance-id)",
                      "--allocation-id ",
                      {
                        "Fn::GetAtt": [
                          "ElasticIP",
                          "AllocationId"
                        ]
                      },
                      "--allow-reassociation"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    " ",
                    [
                      "/opt/aws/bin/aws ec2 modify-instance-attribute",
                      "--instance-id $(/usr/bin/curl -s http://169.254.169.254/latest/meta-data/instance-id)",
                      "--no-source-dest-check"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    " ",
                    [
                      "/opt/aws/bin/aws ec2 replace-route",
                      "--route-table-id ",
                      {
                        "Ref": "PrivateSubnetRouteTable"
                      },
                      "--destination-cidr-block 0.0.0.0/0 --instance-id $(/usr/bin/curl -s http://169.254.169.254/latest/meta-data/instance-id)"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    " ",
                    [
                      "/opt/aws/bin/cfn-signal --success true --resource ASG ",
                      {
                        "Fn::Sub": "--stack ${AWS::StackName} --region ${AWS::Region}"
                      }
                    ]
                  ]
                }
              ]
            ]
          }
        }
      }
    },
    "SNSTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": {
          "Ref": "AWS::StackName"
        },
        "TopicName": {
          "Ref": "AWS::StackName"
        }
      }
    },
    "ASG": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "CreationPolicy": {
        "ResourceSignal": {
          "Count": "1",
          "Timeout": "PT15M"
        }
      },
      "Properties": {
        "VPCZoneIdentifier": [
          {
            "Ref": "PublicSubnetA"
          },
          {
            "Ref": "PublicSubnetB"
          }
        ],
        "LaunchConfigurationName": {
          "Ref": "LaunchConfiguration"
        },
        "MinSize": "1",
        "DesiredCapacity": "1",
        "MaxSize": "1",
        "HealthCheckGracePeriod": 1800,
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "ASG"
                ]
              ]
            },
            "PropagateAtLaunch": true
          }
        ]
      },
      "DependsOn": [
        "IGWAttachment"
      ]
    }
  },
  "Outputs": {
    "PublicIP": {
      "Description": "Firewall Public IP",
      "Value": {
        "Ref": "ElasticIP"
      }
    },
    "Password": {
      "Description": "",
      "Value": "For initial management password check __configNodeId tag of your Auto Scaling Group"
    }
  }
}
